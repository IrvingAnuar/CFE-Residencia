package com.cfe.cfetime.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VehicleUsageAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleUsageAllPropertiesEquals(VehicleUsage expected, VehicleUsage actual) {
        assertVehicleUsageAutoGeneratedPropertiesEquals(expected, actual);
        assertVehicleUsageAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleUsageAllUpdatablePropertiesEquals(VehicleUsage expected, VehicleUsage actual) {
        assertVehicleUsageUpdatableFieldsEquals(expected, actual);
        assertVehicleUsageUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleUsageAutoGeneratedPropertiesEquals(VehicleUsage expected, VehicleUsage actual) {
        assertThat(expected)
            .as("Verify VehicleUsage auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleUsageUpdatableFieldsEquals(VehicleUsage expected, VehicleUsage actual) {
        assertThat(expected)
            .as("Verify VehicleUsage relevant properties")
            .satisfies(e -> assertThat(e.getStartDate()).as("check startDate").isEqualTo(actual.getStartDate()))
            .satisfies(e -> assertThat(e.getEndDate()).as("check endDate").isEqualTo(actual.getEndDate()))
            .satisfies(e -> assertThat(e.getComments()).as("check comments").isEqualTo(actual.getComments()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVehicleUsageUpdatableRelationshipsEquals(VehicleUsage expected, VehicleUsage actual) {
        assertThat(expected)
            .as("Verify VehicleUsage relationships")
            .satisfies(e -> assertThat(e.getVehicle()).as("check vehicle").isEqualTo(actual.getVehicle()))
            .satisfies(e -> assertThat(e.getEmployee()).as("check employee").isEqualTo(actual.getEmployee()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()));
    }
}
