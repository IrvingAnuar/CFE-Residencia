package com.cfe.cfetime.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EmployeeAttendanceAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmployeeAttendanceAllPropertiesEquals(EmployeeAttendance expected, EmployeeAttendance actual) {
        assertEmployeeAttendanceAutoGeneratedPropertiesEquals(expected, actual);
        assertEmployeeAttendanceAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmployeeAttendanceAllUpdatablePropertiesEquals(EmployeeAttendance expected, EmployeeAttendance actual) {
        assertEmployeeAttendanceUpdatableFieldsEquals(expected, actual);
        assertEmployeeAttendanceUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmployeeAttendanceAutoGeneratedPropertiesEquals(EmployeeAttendance expected, EmployeeAttendance actual) {
        assertThat(expected)
            .as("Verify EmployeeAttendance auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmployeeAttendanceUpdatableFieldsEquals(EmployeeAttendance expected, EmployeeAttendance actual) {
        assertThat(expected)
            .as("Verify EmployeeAttendance relevant properties")
            .satisfies(e -> assertThat(e.getAttendanceDate()).as("check attendanceDate").isEqualTo(actual.getAttendanceDate()))
            .satisfies(e -> assertThat(e.getCheckInTime()).as("check checkInTime").isEqualTo(actual.getCheckInTime()))
            .satisfies(e -> assertThat(e.getCheckOutTime()).as("check checkOutTime").isEqualTo(actual.getCheckOutTime()))
            .satisfies(e -> assertThat(e.getComments()).as("check comments").isEqualTo(actual.getComments()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmployeeAttendanceUpdatableRelationshipsEquals(EmployeeAttendance expected, EmployeeAttendance actual) {
        assertThat(expected)
            .as("Verify EmployeeAttendance relationships")
            .satisfies(e -> assertThat(e.getEmployee()).as("check employee").isEqualTo(actual.getEmployee()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()));
    }
}
